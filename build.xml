
                                         
<project default="compile">

  <!-- build.xml for Choice Point 1, S12, CS56
       name: Joey Dewan -->

<property environment="env"/>
<!-- load the environment variables -->
<property name="webRoot" value="${env.HOME}/public_html/"/>
<property name="webBaseURL" value="http://www.cs.ucsb.edu/~${env.USER}"/>
<property name="course" value="cs56"/>
<property name="quarter" value="S12"/>
<property name="issueNum" value="0000776"/>
<property name="mainClass" value="PokerGame"/>
<property name="projectName" value="PokerGame"/>
<property name="projectPath" value="${course}/${quarter}/issues/${issueNum}"/>
<property name="javadocDest" value="${webRoot}/${projectPath}/javadoc"/>
<property name="javadocURL" value="${webBaseURL}/${projectPath}/javadoc"/>
<property name="cardsDest" value="${webRoot}/${projectPath}/Cards"/>

<target name="compile" description="compiles the program">
	<mkdir dir="build"/>
	<javac srcdir="src" destdir="build" includeantruntime="false" debug="true" debuglevel="lines,vars,source">
	<classpath>                                                                                                                              
         <pathelement location="build"/> 
         <pathelement location="./lib/junit-4.8.2.jar"/> 
     </classpath> 
	</javac>
</target> 

<target name="run" depends="compile" description="run program">
	<java classname="${mainClass}" classpath="build" fork="true"/>
</target>

<target name="clean" description="cleans up the directory">
	<delete dir="build" quiet="true" />
    <delete dir="javadoc" quiet="true" />
	<delete dir="dist" quiet="true"/>
	<delete dir="temp" quiet="true"/>
	<delete file="numberedsource.txt" quiet="true"/>
</target>

<target name="cards" depends="compile,jar" description="copy images to web">
	<delete dir="${webRoot}/${projectPath}/Cards"/>
	<mkdir dir="${cardsDest}"/>
	<copy todir="${cardsDest}">
		<fileset dir="src/Cards" includes="*.png"/>
	</copy>
	<copy todir="build/Cards">
		<fileset dir="src/Cards" includes="*.png"/>
	</copy>
</target>

<target name="javadoc" depends="compile" description="deploys the javadoc onto the web">
	<delete dir="javadoc" quiet="true"/>
	<javadoc destdir="javadoc" author="true" version="true" use="true">
		<fileset dir="src" includes="**/*.java"/>
		<classpath>
			<pathelement location="./lib/junit-4.8.2.jar"/>
		</classpath>
	</javadoc>
<!-- delete the old javadoc -->
	<delete quiet="true" dir="${javadocDest}"/>
<!--
copy everything you just made to the javadoc destination, and then make it readable
-->
	<copy todir="${javadocDest}">
		<fileset dir="javadoc"/>
	</copy>
<!--
Note: this only does the chmod command on the javadoc subdirectory and its contents. You MIGHT have to MANUALLY do the chmod on the parent directories. However, you should only need to do that once.
-->
	<chmod dir="${javadocDest}" perm="755" type="dir" includes="**"/>
	<chmod dir="${javadocDest}" perm="755" type="file" includes="**/*"/>
	<echo>Javadoc deployed to ${javadocURL}</echo>
</target>

<target name="jar" depends="compile" description="creates the jar file">
	<mkdir dir="dist"/>
	<jar destfile="dist/${projectName}.jar" basedir="build">
		<manifest>
			<attribute name="Main-Class" value="${mainClass}"/>
		</manifest>
		
	</jar>
	
</target>
 
<target name="linenumbers" description="Creates a file containing all source files with line numbers">               
   <exec executable="bash">                                                                                          
     <arg value="-c"/>                                                                                               
     <arg value='tree -ifQ src | grep \.java\"$ | xargs pr -n > numberedsource.txt'/>                                
   </exec>                                                                                                           
</target> 

 
 <target name="test" depends="compile" description="test the Hand class">
	<junit haltonerror="no" haltonfailure="no">
       <classpath>
         <pathelement location="./lib/junit-4.8.2.jar"/>
         <pathelement location="build"/>
       </classpath>
	 <batchtest fork="yes">
          <fileset dir="src">
            <!-- this will pick up every class with a name ending in Test -->
            <include name="*Test.java"/>
          </fileset>
       </batchtest>
		<formatter type="plain" usefile="false" /> 
    </junit>
  </target>

</project>
